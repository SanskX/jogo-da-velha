import tkinter as tk
from tkinter import messagebox

# Funções de controle do jogo
def verifica_vitoria(tabuleiro, jogador):
    """Verifica se o jogador venceu."""
    combinacoes = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],
        [0, 3, 6], [1, 4, 7], [2, 5, 8],
        [0, 4, 8], [2, 4, 6]
    ]
    for combinacao in combinacoes:
        if all(tabuleiro[i] == jogador for i in combinacao):
            return True
    return False

def minimax(tabuleiro, jogador):
    """Implementa o algoritmo Minimax para a IA."""
    oponente = "X" if jogador == "O" else "O"
    
    if verifica_vitoria(tabuleiro, "O"):
        return 1  # Vitória da IA
    elif verifica_vitoria(tabuleiro, "X"):
        return -1  # Vitória do jogador
    elif " " not in tabuleiro:
        return 0  # Empate

    if jogador == "O":  # Maximizar (IA)
        melhor_valor = -float("inf")
        for i in range(len(tabuleiro)):
            if tabuleiro[i] == " ":
                tabuleiro[i] = jogador
                valor = minimax(tabuleiro, oponente)
                tabuleiro[i] = " "
                melhor_valor = max(melhor_valor, valor)
        return melhor_valor
    else:  # Minimizar (Jogador)
        melhor_valor = float("inf")
        for i in range(len(tabuleiro)):
            if tabuleiro[i] == " ":
                tabuleiro[i] = jogador
                valor = minimax(tabuleiro, oponente)
                tabuleiro[i] = " "
                melhor_valor = min(melhor_valor, valor)
        return melhor_valor

def melhor_jogada(tabuleiro):
    """Determina a melhor jogada para a IA usando Minimax."""
    melhor_valor = -float("inf")
    jogada = -1
    for i in range(len(tabuleiro)):
        if tabuleiro[i] == " ":
            tabuleiro[i] = "O"
            valor = minimax(tabuleiro, "X")
            tabuleiro[i] = " "
            if valor > melhor_valor:
                melhor_valor = valor
                jogada = i
    return jogada

# Configuração inicial do jogo
tabuleiro = [" " for _ in range(9)]

# Função para atualizar o botão após a jogada
def clique_botao(index):
    if tabuleiro[index] == " " and not verifica_vitoria(tabuleiro, "X") and not verifica_vitoria(tabuleiro, "O"):
        # Jogador faz a jogada
        tabuleiro[index] = "X"
        botoes[index].config(text="X")

        # Verificar vitória do jogador
        if verifica_vitoria(tabuleiro, "X"):
            messagebox.showinfo("Fim de Jogo", "Você venceu!")
            reiniciar_jogo()
            return

        # Jogada da IA
        if " " in tabuleiro:
            jogada_ia = melhor_jogada(tabuleiro)
            tabuleiro[jogada_ia] = "O"
            botoes[jogada_ia].config(text="O")

            # Verificar vitória da IA
            if verifica_vitoria(tabuleiro, "O"):
                messagebox.showinfo("Fim de Jogo", "A IA venceu!")
                reiniciar_jogo()
                return

        # Verificar empate
        if " " not in tabuleiro:
            messagebox.showinfo("Fim de Jogo", "Empate!")
            reiniciar_jogo()

# Reinicia o jogo
def reiniciar_jogo():
    global tabuleiro
    tabuleiro = [" " for _ in range(9)]
    for botao in botoes:
        botao.config(text=" ")

# Interface gráfica
janela = tk.Tk()
janela.title("Jogo da Velha com IA")
botoes = []

for i in range(9):
    botao = tk.Button(janela, text=" ", font=("Arial", 24), width=5, height=2,
                      command=lambda i=i: clique_botao(i))
    botao.grid(row=i // 3, column=i % 3)
    botoes.append(botao)

janela.mainloop()
